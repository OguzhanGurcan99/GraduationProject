import torch
import torch.nn as nn

# Example image tensor (3 channels, height=4, width=4)
image = torch.rand(3, 4, 4)

# Example mask tensor (4 classes, height=4, width=4)
# Assume class labels are integers ranging from 0 to num_classes-1
mask = torch.randint(0, 4, (4, 4), dtype=torch.long)

# Define CrossEntropyLoss
loss_function = nn.CrossEntropyLoss()

# Reshape image tensor to (batch_size=1, channels, height, width)
image = image.unsqueeze(0)

# Reshape mask tensor to (batch_size=1, height, width)
mask = mask.unsqueeze(0)

# Calculate the loss
loss = loss_function(image, mask)

print("Input image shape:", image.shape)  # Print the shape of input image
print("Mask shape:", mask.shape)          # Print the shape of the mask tensor
print("Output loss:", loss.item())        # Print the scalar value of the loss
